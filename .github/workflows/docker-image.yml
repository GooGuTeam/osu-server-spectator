name: Build and push Docker image

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch: {}

jobs:
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Determine registry and image name
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "REGISTRY=docker.io" >> $GITHUB_ENV
            echo "REGISTRY_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
            echo "IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/osu-server-spectator:${{ github.sha }}" >> $GITHUB_ENV
            echo "IMAGE_LATEST=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/osu-server-spectator:latest" >> $GITHUB_ENV
          else
            echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
            echo "REGISTRY_USERNAME=${{ github.actor }}" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
            echo "IMAGE=ghcr.io/${{ github.repository_owner }}/osu-server-spectator:${{ github.sha }}" >> $GITHUB_ENV
            echo "IMAGE_LATEST=ghcr.io/${{ github.repository_owner }}/osu-server-spectator:latest" >> $GITHUB_ENV
          fi

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./osu.Server.Spectator
          file: ./osu.Server.Spectator/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE }},${{ env.IMAGE_LATEST }}
